{"ast":null,"code":"import { createStore } from \"vuex\";\nexport default createStore({\n  state: {\n    message: \"Hello Vuex!\",\n    users: {\n      id: 1,\n      name: \"Tran Van Thinh\",\n      age: 20\n    },\n    products: [{\n      id: 1,\n      name: \"Product 1\",\n      qty: 0\n    }, {\n      id: 2,\n      name: \"Product 2\",\n      qty: 10\n    }, {\n      id: 3,\n      name: \"Product 3\",\n      qty: 30\n    }, {\n      id: 4,\n      name: \"Product 4\",\n      qty: 60\n    }, {\n      id: 5,\n      name: \"Product 5\",\n      qty: 100\n    }],\n    count: 0\n  },\n  getters: {\n    getProducts: state => {\n      return state.products.filter(item => item.qty > 10);\n    }\n  },\n  mutations: {\n    changeMessage: (state, users) => {\n      state.users = users;\n    },\n    upCount: (state, payload) => {\n      state.count += payload;\n    }\n  },\n  actions: {\n    changeUpCount: ({\n      commit\n    }, payload) => {\n      setTimeout(() => {\n        commit('upCount', payload);\n      }, 1000);\n      commit('upCount', 10);\n    }\n  }\n});","map":{"version":3,"names":["createStore","state","message","users","id","name","age","products","qty","count","getters","getProducts","filter","item","mutations","changeMessage","upCount","payload","actions","changeUpCount","commit","setTimeout"],"sources":["/Users/tranvanthinh.info/Documents/Vuex/src/store/index.js"],"sourcesContent":["import { createStore } from \"vuex\";\n\n\nexport default createStore({\n    state: {\n        message: \"Hello Vuex!\",\n        users: {\n            id: 1,\n            name: \"Tran Van Thinh\",\n            age: 20\n        },\n        products: [\n            {id: 1, name: \"Product 1\", qty: 0},\n            {id: 2, name: \"Product 2\", qty: 10},\n            {id: 3, name: \"Product 3\", qty: 30},\n            {id: 4, name: \"Product 4\", qty: 60},\n            {id: 5, name: \"Product 5\", qty: 100}\n        ],\n        count: 0\n    },\n    getters: {\n        getProducts: (state) => {\n            return state.products.filter(item => item.qty > 10)\n        }\n    },\n    mutations: {\n        changeMessage: (state, users) => {\n            state.users = users\n        },\n        upCount: (state, payload) => {\n            state.count += payload\n        }\n    },\n    actions: {\n        changeUpCount: ({ commit }, payload) => {\n            setTimeout(() => {\n                commit('upCount', payload)\n            }, 1000)\n\n            commit('upCount', 10)\n        }\n    }\n})"],"mappings":"AAAA,SAASA,WAAW,QAAQ,MAAM;AAGlC,eAAeA,WAAW,CAAC;EACvBC,KAAK,EAAE;IACHC,OAAO,EAAE,aAAa;IACtBC,KAAK,EAAE;MACHC,EAAE,EAAE,CAAC;MACLC,IAAI,EAAE,gBAAgB;MACtBC,GAAG,EAAE;IACT,CAAC;IACDC,QAAQ,EAAE,CACN;MAACH,EAAE,EAAE,CAAC;MAAEC,IAAI,EAAE,WAAW;MAAEG,GAAG,EAAE;IAAC,CAAC,EAClC;MAACJ,EAAE,EAAE,CAAC;MAAEC,IAAI,EAAE,WAAW;MAAEG,GAAG,EAAE;IAAE,CAAC,EACnC;MAACJ,EAAE,EAAE,CAAC;MAAEC,IAAI,EAAE,WAAW;MAAEG,GAAG,EAAE;IAAE,CAAC,EACnC;MAACJ,EAAE,EAAE,CAAC;MAAEC,IAAI,EAAE,WAAW;MAAEG,GAAG,EAAE;IAAE,CAAC,EACnC;MAACJ,EAAE,EAAE,CAAC;MAAEC,IAAI,EAAE,WAAW;MAAEG,GAAG,EAAE;IAAG,CAAC,CACvC;IACDC,KAAK,EAAE;EACX,CAAC;EACDC,OAAO,EAAE;IACLC,WAAW,EAAGV,KAAK,IAAK;MACpB,OAAOA,KAAK,CAACM,QAAQ,CAACK,MAAM,CAACC,IAAI,IAAIA,IAAI,CAACL,GAAG,GAAG,EAAE,CAAC;IACvD;EACJ,CAAC;EACDM,SAAS,EAAE;IACPC,aAAa,EAAEA,CAACd,KAAK,EAAEE,KAAK,KAAK;MAC7BF,KAAK,CAACE,KAAK,GAAGA,KAAK;IACvB,CAAC;IACDa,OAAO,EAAEA,CAACf,KAAK,EAAEgB,OAAO,KAAK;MACzBhB,KAAK,CAACQ,KAAK,IAAIQ,OAAO;IAC1B;EACJ,CAAC;EACDC,OAAO,EAAE;IACLC,aAAa,EAAEA,CAAC;MAAEC;IAAO,CAAC,EAAEH,OAAO,KAAK;MACpCI,UAAU,CAAC,MAAM;QACbD,MAAM,CAAC,SAAS,EAAEH,OAAO,CAAC;MAC9B,CAAC,EAAE,IAAI,CAAC;MAERG,MAAM,CAAC,SAAS,EAAE,EAAE,CAAC;IACzB;EACJ;AACJ,CAAC,CAAC"},"metadata":{},"sourceType":"module","externalDependencies":[]}